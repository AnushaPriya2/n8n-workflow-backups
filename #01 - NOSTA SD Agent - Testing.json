{
  "active": false,
  "connections": {
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "SD agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields1": {
      "main": [
        [
          {
            "node": "SD agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI2": {
      "ai_embedding": [
        [
          {
            "node": "Supabase Vector Store",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory": {
      "ai_memory": [
        [
          {
            "node": "SD agent",
            "type": "ai_memory",
            "index": 0
          },
          {
            "node": "When chat message received",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Supabase Vector Store": {
      "ai_tool": [
        [
          {
            "node": "SD agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Web Search 2": {
      "ai_tool": [
        [
          {
            "node": "SD agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Web Search 1": {
      "ai_tool": [
        [
          {
            "node": "SD agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Download File": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Drive": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [],
        [
          {
            "node": "Set File ID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Default Data Loader": {
      "ai_document": [
        [
          {
            "node": "Insert into Supabase Vectorstore",
            "type": "ai_document",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI1": {
      "ai_embedding": [
        [
          {
            "node": "Insert into Supabase Vectorstore",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Character Text Splitter": {
      "ai_textSplitter": [
        [
          {
            "node": "Default Data Loader",
            "type": "ai_textSplitter",
            "index": 0
          }
        ]
      ]
    },
    "Insert into Supabase Vectorstore": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Insert Document Metadata": {
      "main": [
        [
          {
            "node": "Download File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set File ID": {
      "main": [
        [
          {
            "node": "Insert Document Metadata",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "List Documents": {
      "ai_tool": [
        [
          {
            "node": "SD agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Postgres1": {
      "main": [
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items1": {
      "main": [
        [
          {
            "node": "S31",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Postgres",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres": {
      "main": [
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Edit Fields3",
            "type": "main",
            "index": 0
          },
          {
            "node": "Edit Fields2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields2": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Insert into Supabase Vectorstore",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "On form submission": {
      "main": [
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If1": {
      "main": [
        [
          {
            "node": "Postgres1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Convert to File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to File": {
      "main": [
        [
          {
            "node": "S3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields3": {
      "main": [
        [
          {
            "node": "Split Out",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SD agent": {
      "main": [
        []
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "Download File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "S3": {
      "main": [
        []
      ]
    },
    "S31": {
      "main": [
        [
          {
            "node": "S32",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "S32": {
      "main": [
        [
          {
            "node": "Google Drive",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase Memory Delete": {
      "ai_tool": [
        [
          {
            "node": "SD agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Microsoft OneDrive2": {
      "main": [
        []
      ]
    },
    "Microsoft OneDrive": {
      "main": [
        []
      ]
    },
    "Microsoft OneDrive4": {
      "main": [
        []
      ]
    },
    "Loop Over Items5": {
      "main": [
        [],
        [
          {
            "node": "Set File ID3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Insert Document Metadata3": {
      "main": [
        [
          {
            "node": "Microsoft OneDrive7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set File ID3": {
      "main": [
        [
          {
            "node": "Insert Document Metadata3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Microsoft OneDrive6": {
      "main": [
        [
          {
            "node": "Loop Over Items5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When clicking ‘Test workflow’": {
      "main": [
        [
          {
            "node": "Microsoft SharePoint HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Microsoft SharePoint HTTP Request": {
      "main": [
        [
          {
            "node": "Split Out1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out1": {
      "main": [
        [
          {
            "node": "Loop Over Items2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items2": {
      "main": [
        [],
        [
          {
            "node": "Set File ID1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set File ID1": {
      "main": [
        [
          {
            "node": "Insert Document Metadata1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Insert Document Metadata1": {
      "main": [
        [
          {
            "node": "Microsoft SharePoint HTTP Request1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Microsoft SharePoint HTTP Request1": {
      "main": [
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request1": {
      "main": [
        [],
        []
      ]
    },
    "Code1": {
      "main": [
        [
          {
            "node": "HTTP Request1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When chat message received": {
      "main": [
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-05-19T08:04:17.135Z",
  "id": "ggJXaOqj7nWnsUEG",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "#01 - NOSTA SD Agent - Testing",
  "nodes": [
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        380,
        680
      ],
      "id": "98b71c1a-5585-4c0f-9db4-967da32eb109",
      "name": "OpenAI Chat Model1",
      "credentials": {
        "openAiApi": {
          "id": "jpK6UkKnpLM9LJPk",
          "name": "OpenAi account 2"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "9a9a245e-f1a1-4282-bb02-a81ffe629f0f",
              "name": "chatInput",
              "value": "={{ $json?.chatInput || $json.body.chatInput }}",
              "type": "string"
            },
            {
              "id": "b80831d8-c653-4203-8706-adedfdb98f77",
              "name": "sessionId",
              "value": "={{ $json?.sessionId || $json.body.sessionId}}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "75379e8f-e1e2-4677-a6c8-bd857cbb973c",
      "name": "Edit Fields1",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        620,
        440
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1.2,
      "position": [
        920,
        800
      ],
      "id": "6d2165e7-6463-410f-bef9-d50bc4db9aa7",
      "name": "Embeddings OpenAI2",
      "credentials": {
        "openAiApi": {
          "id": "jpK6UkKnpLM9LJPk",
          "name": "OpenAi account 2"
        }
      }
    },
    {
      "parameters": {
        "tableName": "n8n_chat"
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        540,
        680
      ],
      "id": "d4566889-0b86-4531-9410-ed2bf19b9176",
      "name": "Postgres Chat Memory",
      "credentials": {
        "postgres": {
          "id": "Qer75M1RfykhlGmw",
          "name": "Postgres Ayan"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.chatInput }}",
        "options": {
          "systemMessage": "=You are a helpful, intelligent AI support SD agent and are a proactive chat agent. Lead the conversation by asking open-ended questions and offering suggestions. Don’t wait for the user to guide the chat — keep it moving with helpful, friendly prompts. Anticipate needs, follow up thoughtfully, and make the user feel supported throughout.\n\n*Knowledge Access Instructions*\n   1.  First, for every user question, always use the Supabase store (n8n_test table) as the primary source for all questions.\n\n   2. Begin each query by searching only in Supabase (n8n_test). This content is primarily in German, so make sure all queries sent to Supabase are in German.\n\n   3. If relevant information is found in Supabase, respond in English by first providing the textual information, and then inserting the relevant image(s) immediately after the specific paragraph or section they relate to. Do not group images at the end of the response, and compulsory cite the internal document name and also provide the internal document url from where the information is provide.\nExample:\n\"For your reference, this information is based on the internal documentation related to Delivery Schedule with EDI Call-Off in SAP systems (Anwenderdoku_Lieferplan mit Abruf EDI). For more detailed guidance, you can access the internal document using the following URL:https://docs.google.com/document/d/110npvMDrPp4DkY5A18NLjBx8QXWomSaa/edit#heading=h.p71y513zojx\"\n\n   4. If no relevant information is found in Supabase:\nRespond to the user with:\n\"The information you requested is not available in our internal documentation. Would you like me to do a Web search?\"\n\n   5. Do NOT use web search tools automatically to perform web search.\n\n      -> Wait for the user's explicit confirmation (e.g., \"Yes\", \"Okay\", \"Please do\", etc.).\n\n   6. Only after receiving user permission, you should web search. To search the web always use both (web search 1 and web search 2 tools node) and they accept single string of English querry.\n\n  Clearly state that this is an external source.\nExample:\n\"This information comes from an external source (e.g.,from relevant website)...\"\n\n*Important Rules & Logic*\n   1. After getting permission for web search use that only for the immediate response, return to Supabase for all future queries unless the user explicitly asks for external help again.\n   2. If no data is found in Supabase or web:\n\"At the moment, there is no information available to fully address this request based on current internal and external sources.\"\n 3. Images should be placed inline, following the specific sentence or section they illustrate — not in a separate section. Use this format,\n\"![image](https://nsebtjqnfydjgjtigsiq.supabase.co/storage/v1/object/public/images/extracted_images/\"+ document_metadata_id + \"_\" + image_name +\")\"\n\n  example,\n![image](https://nsebtjqnfydjgjtigsiq.supabase.co/storage/v1/object/public/images/extracted_images/1SCQXpDQIjCppT32dk54Zs3Nzdoq4syu-_image10.png)\n\n*Format & Style Guidelines*\n   1. All Supabase queries must be in German and all responses to the user must be in English\n   2. Responses must be Professional, Clear and helpful, small as possible but presise and well structured.\n  3. Only for guide/ instruction based response, follow this format:\n   • Step-by-Step Guide\n   • Things To Consider\n   • Further Understanding\nUnder \"Further Understanding,\"do not ask for related questions.Instead, write two lines in points asking users what topic to explore next based on user question and give some suggestions.\n\n**Things to Consider/Important Details/Common Pitfalls\n   •You should actively work to avoid common errors and pay close attention to important details, ensuring none are overlooked while performing the task.",
          "returnIntermediateSteps": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        860,
        440
      ],
      "id": "4a669044-923c-44e2-9e04-9f50a5f24e65",
      "name": "SD agent"
    },
    {
      "parameters": {
        "mode": "retrieve-as-tool",
        "toolName": "documents",
        "toolDescription": "Use RAG to look up information in the knowledgebase.",
        "tableName": {
          "__rl": true,
          "value": "n8n_test",
          "mode": "list",
          "cachedResultName": "n8n_test"
        },
        "topK": 10,
        "options": {
          "queryName": "match5_documents"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
      "typeVersion": 1,
      "position": [
        980,
        660
      ],
      "id": "d386e2cf-cc3b-4f4e-be5a-ae80bda4377b",
      "name": "Supabase Vector Store",
      "credentials": {
        "supabaseApi": {
          "id": "IOh0LUl8h2DbmqBS",
          "name": "Supabase Ayan"
        }
      }
    },
    {
      "parameters": {
        "toolDescription": "Web Search tool only SAP websites",
        "method": "POST",
        "url": "https://api.tavily.com/search",
        "sendHeaders": true,
        "parametersHeaders": {
          "values": [
            {
              "name": "Authorization",
              "valueProvider": "fieldValue",
              "value": "Bearer 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"
            },
            {
              "name": "Content-Type",
              "valueProvider": "fieldValue",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"query\": \"{query}\",\n  \"topic\": \"general\",\n  \"search_depth\": \"advanced\",\n  \"max_results\": 20,\n  \"include_answer\": true,\n  \"include_raw_content\": false,\n  \"include_images\": false,\n  \"include_image_descriptions\": false,\n  \"include_domains\": [\"https://help.sap.com/docs/\",\"https://community.sap.com/\"],\n  \"exclude_domains\": []\n}",
        "placeholderDefinitions": {
          "values": [
            {
              "name": "query",
              "description": "Search Querry",
              "type": "string"
            }
          ]
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1.1,
      "position": [
        1460,
        660
      ],
      "id": "9e1a2a00-35ec-4d48-86d0-08320c3126ae",
      "name": "Web Search 2"
    },
    {
      "parameters": {
        "toolDescription": "Web Search tool excluding SAP websites",
        "method": "POST",
        "url": "https://api.tavily.com/search",
        "sendHeaders": true,
        "parametersHeaders": {
          "values": [
            {
              "name": "Authorization",
              "valueProvider": "fieldValue",
              "value": "Bearer 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"
            },
            {
              "name": "Content-Type",
              "valueProvider": "fieldValue",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"query\": \"{query}\",\n  \"topic\": \"general\",\n  \"search_depth\": \"advanced\",\n  \"max_results\": 20,\n  \"include_answer\": true,\n  \"include_raw_content\": false,\n  \"include_images\": false,\n  \"include_image_descriptions\": false,\n  \"include_domains\": [],\n  \"exclude_domains\": [\"https://help.sap.com/docs/\",\"https://community.sap.com/\"]\n}",
        "placeholderDefinitions": {
          "values": [
            {
              "name": "query",
              "description": "Search Querry",
              "type": "string"
            }
          ]
        },
        "optimizeResponse": true
      },
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1.1,
      "position": [
        1320,
        660
      ],
      "id": "d120d4c8-9bd2-474a-bbb5-e29b3e34efba",
      "name": "Web Search 1"
    },
    {
      "parameters": {
        "operation": "download",
        "fileId": {
          "__rl": true,
          "value": "={{ $json.id }}",
          "mode": "id"
        },
        "options": {}
      },
      "id": "eb530414-e172-4104-b429-38c18d653c0e",
      "name": "Download File",
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        1020,
        -360
      ],
      "executeOnce": true,
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "GK4eEnpXUcuMg5Zb",
          "name": "Google Drive account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://universal-file-to-text-extractor.vercel.app/extract",
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "name": "mode",
              "value": "single"
            },
            {
              "name": "output_type",
              "value": "jsonl"
            },
            {
              "parameterType": "formBinaryData",
              "name": "files",
              "inputDataFieldName": "data"
            },
            {
              "name": "include_images",
              "value": "true"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1200,
        -360
      ],
      "id": "61b2c737-2741-4b06-af48-eb550810f4be",
      "name": "HTTP Request",
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "resource": "fileFolder",
        "searchMethod": "query",
        "returnAll": true,
        "filter": {
          "folderId": {
            "__rl": true,
            "value": "1WpO8qir_UUWVna9WOY_Vj_RVbwBrWawY",
            "mode": "list",
            "cachedResultName": "Customer Documentation",
            "cachedResultUrl": "https://drive.google.com/drive/folders/1WpO8qir_UUWVna9WOY_Vj_RVbwBrWawY"
          }
        },
        "options": {
          "fields": [
            "id",
            "mimeType",
            "name",
            "webViewLink"
          ]
        }
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        140,
        -380
      ],
      "id": "ca46a7cb-9808-43c7-a287-efb85c7f7bf2",
      "name": "Google Drive",
      "executeOnce": true,
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "GK4eEnpXUcuMg5Zb",
          "name": "Google Drive account"
        }
      }
    },
    {
      "parameters": {
        "options": {
          "reset": false
        }
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        360,
        -380
      ],
      "id": "e4976646-cdd2-4ec3-bf50-7e0748bf4267",
      "name": "Loop Over Items"
    },
    {
      "parameters": {
        "jsonMode": "expressionData",
        "jsonData": "={{ $json.content.parseJson().pageContent.toJsonString() }}",
        "options": {
          "metadata": {
            "metadataValues": [
              {
                "name": "source",
                "value": "={{ $json.content.parseJson().metadata.source }}"
              },
              {
                "name": "blobType",
                "value": "application/jsonb"
              },
              {
                "name": "loc",
                "value": "={{ $json.content.parseJson().metadata.loc }}"
              },
              {
                "name": "source_metadata_id",
                "value": "={{ $json.content.parseJson().metadata.source_metadata_id }}"
              }
            ]
          }
        }
      },
      "id": "c7073059-0d9d-42ea-b648-94fd88d88bb5",
      "name": "Default Data Loader",
      "type": "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
      "typeVersion": 1,
      "position": [
        2460,
        -160
      ]
    },
    {
      "parameters": {
        "model": "text-embedding-3-small",
        "options": {}
      },
      "id": "c1be39a0-338d-425f-917d-cdf6017781b6",
      "name": "Embeddings OpenAI1",
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1,
      "position": [
        2280,
        -160
      ],
      "credentials": {
        "openAiApi": {
          "id": "jpK6UkKnpLM9LJPk",
          "name": "OpenAi account 2"
        }
      }
    },
    {
      "parameters": {
        "chunkSize": 10000000
      },
      "id": "dfeb35a1-090c-49d3-a049-e4ef1bc9053f",
      "name": "Character Text Splitter",
      "type": "@n8n/n8n-nodes-langchain.textSplitterCharacterTextSplitter",
      "typeVersion": 1,
      "position": [
        2520,
        80
      ]
    },
    {
      "parameters": {
        "mode": "insert",
        "tableName": {
          "__rl": true,
          "value": "n8n_test",
          "mode": "list",
          "cachedResultName": "n8n_test"
        },
        "options": {
          "queryName": "match5_documents"
        }
      },
      "id": "8e3a886c-2374-4b6a-a3d7-f6b3f1b4c0a3",
      "name": "Insert into Supabase Vectorstore",
      "type": "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
      "typeVersion": 1,
      "position": [
        2380,
        -380
      ],
      "credentials": {
        "supabaseApi": {
          "id": "IOh0LUl8h2DbmqBS",
          "name": "Supabase Ayan"
        }
      }
    },
    {
      "parameters": {
        "operation": "upsert",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "n8n_metadata",
          "mode": "list",
          "cachedResultName": "n8n_metadata"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "id": "={{ $('Set File ID').item.json.file_id }}",
            "title": "={{ $('Set File ID').item.json.file_title.replaceSpecialChars() }}",
            "url": "={{ $('Set File ID').item.json.file_url }}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": true,
              "defaultMatch": true,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "title",
              "displayName": "title",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false
            },
            {
              "id": "url",
              "displayName": "url",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false,
              "removed": false
            },
            {
              "id": "created_at",
              "displayName": "created_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": false
            },
            {
              "id": "schema",
              "displayName": "schema",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        820,
        -360
      ],
      "id": "4306bec6-941b-4202-9242-1d2291d340ad",
      "name": "Insert Document Metadata",
      "executeOnce": true,
      "credentials": {
        "postgres": {
          "id": "Qer75M1RfykhlGmw",
          "name": "Postgres Ayan"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "10646eae-ae46-4327-a4dc-9987c2d76173",
              "name": "file_id",
              "value": "={{ $json.id }}",
              "type": "string"
            },
            {
              "id": "f4536df5-d0b1-4392-bf17-b8137fb31a44",
              "name": "file_type",
              "value": "={{ $json.mimeType }}",
              "type": "string"
            },
            {
              "id": "77d782de-169d-4a46-8a8e-a3831c04d90f",
              "name": "file_title",
              "value": "={{ $json.name }}",
              "type": "string"
            },
            {
              "id": "9bde4d7f-e4f3-4ebd-9338-dce1350f9eab",
              "name": "file_url",
              "value": "={{ $json.webViewLink }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "d9e42962-316f-4727-b9d1-411fde9ec7a3",
      "name": "Set File ID",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        600,
        -360
      ]
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Use this tool to fetch all available documents, including the table schema if the file is a CSV or Excel file.",
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "n8n_metadata",
          "mode": "list",
          "cachedResultName": "n8n_metadata"
        },
        "returnAll": true,
        "options": {}
      },
      "type": "n8n-nodes-base.postgresTool",
      "typeVersion": 2.5,
      "position": [
        740,
        700
      ],
      "id": "586bf4b5-2588-4ed8-a88f-df5358ebff06",
      "name": "List Documents",
      "credentials": {
        "postgres": {
          "id": "Qer75M1RfykhlGmw",
          "name": "Postgres Ayan"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT table_name\nFROM information_schema.tables\nWHERE table_schema = 'public' and table_name like 'n8n%'\norder by length(table_name) Asc;",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        200,
        -680
      ],
      "id": "b2dba09b-9ca3-4762-aa55-3771928a4054",
      "name": "Postgres1",
      "executeOnce": true,
      "credentials": {
        "postgres": {
          "id": "Qer75M1RfykhlGmw",
          "name": "Postgres Ayan"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        420,
        -680
      ],
      "id": "d55c23d7-a797-4137-982b-df185553151d",
      "name": "Loop Over Items1"
    },
    {
      "parameters": {
        "operation": "deleteTable",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "={{ $json.table_name }}",
          "mode": "name"
        },
        "restartSequences": true,
        "options": {
          "cascade": true
        }
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        680,
        -660
      ],
      "id": "e1c32ba1-9fdc-456b-b71f-c66fe14dac04",
      "name": "Postgres",
      "credentials": {
        "postgres": {
          "id": "Qer75M1RfykhlGmw",
          "name": "Postgres Ayan"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 2
          },
          "conditions": [
            {
              "id": "d15e917b-43d2-40b8-8b49-af467ff63961",
              "leftValue": "={{ $json.data[0].parseJson().skipped }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notExists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1480,
        -360
      ],
      "id": "07c0350b-cfcd-407d-a578-7f8fdc5957a8",
      "name": "If"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "5132d92c-41da-4a55-ad79-0c329ca7e626",
              "name": "Document name",
              "value": "={{ $('HTTP Request').item.json.data[0].parseJson().source }}",
              "type": "string"
            },
            {
              "id": "c8160701-2be7-43c6-bcfa-295fbebe0e23",
              "name": "Document data",
              "value": "={{ $('HTTP Request').item.json.data[0].parseJson().blocks }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1760,
        -380
      ],
      "id": "f830a799-1480-47b1-9ccd-575f1e95e012",
      "name": "Edit Fields2"
    },
    {
      "parameters": {
        "jsCode": "// 0. Parse the incoming Document data if it's still a string\nlet raw = $input.first().json['Document data'];\nlet arr = typeof raw === 'string' ? JSON.parse(raw) : raw;\nlet source = $input.first().json['Document name'];\nlet source_id = $('Insert Document Metadata').first().json.id\n\n// Helper: return character length of an array object\nfunction getObjLength(obj) {\n  console.log(obj, typeof(obj));\n  return (obj.content || '').length;\n}\n\nfunction getObjLengthofTextOnly(obj) {\n  if (obj.type === 'image_ocr') {\n    return 0;\n  }\n  return (obj.content || '').length;\n}\n\n// Split any single item whose content is > chunkSize into multiple items\nfunction splitOversizedItems(arr, chunkSize) {\n  const result = [];\n  for (const item of arr) {\n    const content = item.content || '';\n    if (content.length <= chunkSize) {\n      result.push(item);\n    } else {\n      // slice into parts of size chunkSize\n      for (let start = 0; start < content.length; start += chunkSize) {\n        const part = content.slice(start, start + chunkSize);\n        // carry over other fields (type, filename, etc.)\n        result.push({ ...item, content: part });\n      }\n    }\n  }\n  return result;\n}\n\n// Chunking function\nfunction chunkByCharLength(arr, source, chunkSize = 1000) {\n  // first, split oversized items\n  const flat = splitOversizedItems(arr, chunkSize);\n\n  const response = [];\n  let idx = 0;\n  let charPos = 0;\n\n  while (idx < flat.length) {\n    const a = [];\n    let sum = 0;\n    const from = charPos;\n\n    // collect until we hit chunkSize\n    while (idx < flat.length && sum < chunkSize) {\n      const item = flat[idx];\n      const len = getObjLength(item);\n      const text_len = getObjLengthofTextOnly(item);\n      a.push(item);\n      sum += len;\n      charPos += text_len;\n      idx++;\n    }\n\n    const to = charPos;\n    const metadata = {\n      source: source,\n      source_metadata_id: source_id,\n      loc: { Characters: { from, to } }\n    };\n\n    response.push({\n      content: JSON.stringify({\n        pageContent: a,\n        metadata\n      })\n    });\n  }\n\n  return response;\n}\n\n// 1. Run chunking\nconst chunks = chunkByCharLength(arr, source, 1000);\n\n// 2. Return in n8n‑compatible format\nreturn chunks.map(c => ({ json: c }));\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2060,
        -380
      ],
      "id": "0b108431-45ec-441e-8d1b-6113ea4b694f",
      "name": "Code"
    },
    {
      "parameters": {
        "formTitle": "Refresh Database ???",
        "formDescription": "Delete and re-Upload all data in Supabase.",
        "formFields": {
          "values": [
            {
              "fieldLabel": "Start Refresh",
              "fieldType": "dropdown",
              "fieldOptions": {
                "values": [
                  {
                    "option": "Yes"
                  },
                  {
                    "option": "No"
                  }
                ]
              },
              "requiredField": true
            }
          ]
        },
        "options": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.formTrigger",
      "typeVersion": 2.2,
      "position": [
        -200,
        -660
      ],
      "id": "53f788ee-45d2-4863-b620-07864490bd4e",
      "name": "On form submission",
      "webhookId": "fe596c78-6cc5-44f7-87a4-b2ed7f1a509f"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "32d90ae7-9278-4011-9469-ba387d9d9ed1",
              "leftValue": "={{ $json['Start Refresh'] }}",
              "rightValue": "Yes",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -40,
        -660
      ],
      "id": "bf54d38a-62ce-4589-b188-2352e740ad1e",
      "name": "If1"
    },
    {
      "parameters": {
        "operation": "toBinary",
        "sourceProperty": "data",
        "options": {
          "fileName": "={{ $('Insert Document Metadata').item.json.id +\"_\"+ $json.fileName}}"
        }
      },
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        2360,
        -680
      ],
      "id": "05048f53-a57d-4743-bf66-3504888f796f",
      "name": "Convert to File"
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "={\n    \"data\": \"{{ $json.data }}\", \n    \"fileName\": \"{{ $json.filename }}\", \n    \"mimeType\": \"image/png\"\n}\n\n\n\n",
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2160,
        -680
      ],
      "id": "0bccb93b-7af5-452a-9088-b8b32a183fd6",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "7e6dcc66-0501-4739-a738-909878c4b23d",
              "name": "images",
              "value": "={{ $('HTTP Request').item.json.data[0].parseJson().images }}",
              "type": "array"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1740,
        -680
      ],
      "id": "497fc96b-d986-4e6c-b3ae-f9a09e031a7e",
      "name": "Edit Fields3"
    },
    {
      "parameters": {
        "fieldToSplitOut": "images",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        1960,
        -680
      ],
      "id": "e2fff460-04af-41f6-8f3b-4d17ca815dbe",
      "name": "Split Out"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        1420,
        -80
      ],
      "id": "3272dabd-162b-4f5b-9092-74effdea3dbd",
      "name": "Wait",
      "webhookId": "29a6451b-8a53-4598-b4fe-e11241eb51ab"
    },
    {
      "parameters": {
        "operation": "upload",
        "bucketName": "images",
        "fileName": "=",
        "additionalFields": {
          "parentFolderKey": "extracted_images"
        }
      },
      "type": "n8n-nodes-base.s3",
      "typeVersion": 1,
      "position": [
        2560,
        -680
      ],
      "id": "b43600e1-c440-4bd6-8da4-778747848ddd",
      "name": "S3",
      "credentials": {
        "s3": {
          "id": "R5bk1tDKWKBON865",
          "name": "S3 account"
        }
      }
    },
    {
      "parameters": {
        "resource": "folder",
        "operation": "delete",
        "bucketName": "images",
        "folderKey": "extracted_images"
      },
      "type": "n8n-nodes-base.s3",
      "typeVersion": 1,
      "position": [
        960,
        -700
      ],
      "id": "2ecac76e-2425-46e0-8afd-2cabb7f5a9d9",
      "name": "S31",
      "credentials": {
        "s3": {
          "id": "R5bk1tDKWKBON865",
          "name": "S3 account"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "resource": "folder",
        "bucketName": "images",
        "folderName": "extracted_images",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.s3",
      "typeVersion": 1,
      "position": [
        1180,
        -700
      ],
      "id": "62ab8ea9-113b-44c8-a8fe-292fb34f6ddb",
      "name": "S32",
      "credentials": {
        "s3": {
          "id": "R5bk1tDKWKBON865",
          "name": "S3 account"
        }
      }
    },
    {
      "parameters": {
        "resource": "folder",
        "operation": "search",
        "query": "03_Externer_Zugriff"
      },
      "type": "n8n-nodes-base.microsoftOneDrive",
      "typeVersion": 1,
      "position": [
        460,
        1680
      ],
      "id": "d74de4b9-8851-43f7-94d8-dedd72405d9d",
      "name": "Microsoft OneDrive",
      "credentials": {
        "microsoftOneDriveOAuth2Api": {
          "id": "YptAVdO9kCEVH7vh",
          "name": "Microsoft Drive account 6"
        }
      }
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "If user send \"clear\" or \"restart\" use this tool",
        "operation": "delete",
        "tableId": "n8n_chat",
        "matchType": "allFilters",
        "filters": {
          "conditions": [
            {
              "keyName": "session_id",
              "condition": "eq",
              "keyValue": "={{ $('When chat message received').item.json.sessionId }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabaseTool",
      "typeVersion": 1,
      "position": [
        1600,
        640
      ],
      "id": "76eac826-1e5b-4baa-9e54-fb362ecb3cfa",
      "name": "Supabase Memory Delete",
      "credentials": {
        "supabaseApi": {
          "id": "IOh0LUl8h2DbmqBS",
          "name": "Supabase Ayan"
        }
      }
    },
    {
      "parameters": {
        "resource": "folder",
        "folderId": "01CNJGPJSR4LBTU4NULNEZAWIBWX3X7TIY"
      },
      "type": "n8n-nodes-base.microsoftOneDrive",
      "typeVersion": 1,
      "position": [
        660,
        1720
      ],
      "id": "9fde2e5a-5aa3-4014-9aad-62aab521dc20",
      "name": "Microsoft OneDrive2",
      "alwaysOutputData": true,
      "credentials": {
        "microsoftOneDriveOAuth2Api": {
          "id": "YptAVdO9kCEVH7vh",
          "name": "Microsoft Drive account 6"
        }
      }
    },
    {
      "parameters": {
        "resource": "folder",
        "operation": "search",
        "query": "Anwenderdoku_Kundenretoure + Auftragsverknüfung"
      },
      "type": "n8n-nodes-base.microsoftOneDrive",
      "typeVersion": 1,
      "position": [
        140,
        1240
      ],
      "id": "ff7e8c13-0a36-4553-b874-32e728d23078",
      "name": "Microsoft OneDrive4",
      "credentials": {
        "microsoftOneDriveOAuth2Api": {
          "id": "FThFHX7IAIOtmdVX",
          "name": "Microsoft Drive account"
        }
      }
    },
    {
      "parameters": {
        "options": {
          "reset": false
        }
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        320,
        1460
      ],
      "id": "7f614e71-803f-4fc7-a211-36536427419f",
      "name": "Loop Over Items5"
    },
    {
      "parameters": {
        "operation": "upsert",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "n8n_metadata",
          "mode": "list",
          "cachedResultName": "n8n_metadata"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "id": "={{ $('Set File ID3').item.json.file_id }}",
            "title": "={{ $('Set File ID3').item.json.file_title.replaceSpecialChars() }}",
            "url": "={{ $('Set File ID3').item.json.file_url }}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": true,
              "defaultMatch": true,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "title",
              "displayName": "title",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false
            },
            {
              "id": "url",
              "displayName": "url",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false,
              "removed": false
            },
            {
              "id": "created_at",
              "displayName": "created_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": false
            },
            {
              "id": "schema",
              "displayName": "schema",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        780,
        1480
      ],
      "id": "b0abd2b2-f16b-428c-bf3d-9dd361c1de05",
      "name": "Insert Document Metadata3",
      "executeOnce": true,
      "credentials": {
        "postgres": {
          "id": "Qer75M1RfykhlGmw",
          "name": "Postgres Ayan"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "10646eae-ae46-4327-a4dc-9987c2d76173",
              "name": "file_id",
              "value": "={{ $json.id }}",
              "type": "string"
            },
            {
              "id": "f4536df5-d0b1-4392-bf17-b8137fb31a44",
              "name": "file_type",
              "value": "={{ $json.mimeType }}",
              "type": "string"
            },
            {
              "id": "77d782de-169d-4a46-8a8e-a3831c04d90f",
              "name": "file_title",
              "value": "={{ $json.name }}",
              "type": "string"
            },
            {
              "id": "9bde4d7f-e4f3-4ebd-9338-dce1350f9eab",
              "name": "file_url",
              "value": "={{ $json.webUrl }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "148c8633-b419-41ea-b583-a58c5620180c",
      "name": "Set File ID3",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        600,
        1480
      ]
    },
    {
      "parameters": {
        "resource": "folder",
        "folderId": "5580C821C6CACFA6!s207a38545e6341e3a8645c662b08c81d"
      },
      "type": "n8n-nodes-base.microsoftOneDrive",
      "typeVersion": 1,
      "position": [
        140,
        1460
      ],
      "id": "a81cc929-636c-4cd5-a0ff-e594921f3af2",
      "name": "Microsoft OneDrive6",
      "credentials": {
        "microsoftOneDriveOAuth2Api": {
          "id": "FThFHX7IAIOtmdVX",
          "name": "Microsoft Drive account"
        }
      }
    },
    {
      "parameters": {
        "operation": "download",
        "fileId": "={{ $json.id }}"
      },
      "type": "n8n-nodes-base.microsoftOneDrive",
      "typeVersion": 1,
      "position": [
        1000,
        1480
      ],
      "id": "ec060edd-de99-4268-bf7e-c6dc7da51004",
      "name": "Microsoft OneDrive7",
      "credentials": {
        "microsoftOneDriveOAuth2Api": {
          "id": "FThFHX7IAIOtmdVX",
          "name": "Microsoft Drive account"
        }
      }
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -200,
        -1040
      ],
      "id": "e1c60a96-1db4-4083-9042-df187f5a03c9",
      "name": "When clicking ‘Test workflow’"
    },
    {
      "parameters": {
        "curlImport": "",
        "httpVariantWarning": "",
        "method": "GET",
        "url": "https://nosta.sharepoint.com/sites/OPEX/_api/web/GetFolderByServerRelativeUrl('/sites/OPEX/Freigegebene%20Dokumente/OPEX/03_Externer_Zugriff')/Files",
        "": "",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "microsoftSharePointOAuth2Api",
        "provideSslCertificates": false,
        "sendQuery": false,
        "sendHeaders": false,
        "sendBody": false,
        "options": {
          "response": {
            "response": {
              "fullResponse": false,
              "neverError": false,
              "responseFormat": "autodetect"
            }
          }
        },
        "infoMessage": ""
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        20,
        -1040
      ],
      "id": "6aa6f120-da52-4a15-a628-afbeea73509a",
      "name": "Microsoft SharePoint HTTP Request",
      "extendsCredential": "microsoftSharePointOAuth2Api",
      "credentials": {
        "microsoftSharePointOAuth2Api": {
          "id": "9BGGzF75Nq8GkPkx",
          "name": "Microsoft SharePoint account 4"
        }
      }
    },
    {
      "parameters": {
        "fieldToSplitOut": "value",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        200,
        -1040
      ],
      "id": "2530349a-19f0-4d63-8564-1c88bf58f8c3",
      "name": "Split Out1"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        400,
        -1040
      ],
      "id": "c76b16c4-49fe-4eff-84a4-879dc1db84a6",
      "name": "Loop Over Items2"
    },
    {
      "parameters": {
        "curlImport": "",
        "httpVariantWarning": "",
        "method": "GET",
        "url": "=https://nosta.sharepoint.com/sites/OPEX/_api/web/GetFileByServerRelativeUrl('{{ $('Microsoft SharePoint HTTP Request').item.json.value[0].ServerRelativeUrl }}')/$value",
        "": "",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "microsoftSharePointOAuth2Api",
        "provideSslCertificates": false,
        "sendQuery": false,
        "sendHeaders": false,
        "sendBody": false,
        "options": {
          "response": {
            "response": {
              "fullResponse": false,
              "neverError": false,
              "responseFormat": "file",
              "outputPropertyName": "data"
            }
          }
        },
        "infoMessage": ""
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        960,
        -1020
      ],
      "id": "8abcd06d-6413-4687-b3c7-9596ece22a80",
      "name": "Microsoft SharePoint HTTP Request1",
      "extendsCredential": "microsoftSharePointOAuth2Api",
      "credentials": {
        "microsoftSharePointOAuth2Api": {
          "id": "9BGGzF75Nq8GkPkx",
          "name": "Microsoft SharePoint account 4"
        }
      }
    },
    {
      "parameters": {
        "operation": "upsert",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "n8n_metadata",
          "mode": "list",
          "cachedResultName": "n8n_metadata"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "id": "={{ $('Set File ID1').item.json.file_id }}",
            "title": "={{ $('Set File ID1').item.json.file_title.replaceSpecialChars() }}",
            "url": "={{ $('Set File ID1').item.json.file_url }}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": true,
              "defaultMatch": true,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "title",
              "displayName": "title",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false
            },
            {
              "id": "url",
              "displayName": "url",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false,
              "removed": false
            },
            {
              "id": "created_at",
              "displayName": "created_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": false
            },
            {
              "id": "schema",
              "displayName": "schema",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        780,
        -1020
      ],
      "id": "6e2884c9-a1c7-4e8b-aa91-9f09192d2fac",
      "name": "Insert Document Metadata1",
      "executeOnce": true,
      "credentials": {
        "postgres": {
          "id": "Qer75M1RfykhlGmw",
          "name": "Postgres Ayan"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "10646eae-ae46-4327-a4dc-9987c2d76173",
              "name": "file_id",
              "value": "={{ $json.UniqueId }}",
              "type": "string"
            },
            {
              "id": "f4536df5-d0b1-4392-bf17-b8137fb31a44",
              "name": "file_type",
              "value": "={{ $json.Name.split('.').pop() }}",
              "type": "string"
            },
            {
              "id": "77d782de-169d-4a46-8a8e-a3831c04d90f",
              "name": "file_title",
              "value": "={{ $json.Name }}",
              "type": "string"
            },
            {
              "id": "9bde4d7f-e4f3-4ebd-9338-dce1350f9eab",
              "name": "file_url",
              "value": "={{ $json.LinkingUri }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "113a4d95-3add-4aff-b838-1528435b1bcf",
      "name": "Set File ID1",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        620,
        -1020
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://universal-file-to-text-extractor.vercel.app/extract",
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "name": "mode",
              "value": "single"
            },
            {
              "name": "output_type",
              "value": "jsonl"
            },
            {
              "parameterType": "formBinaryData",
              "name": "files",
              "inputDataFieldName": "data"
            },
            {
              "name": "include_images",
              "value": "true"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1320,
        -1020
      ],
      "id": "4dad90f4-3afb-405b-8980-d7d9625e1429",
      "name": "HTTP Request1",
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "jsCode": "$input.item.binary.data.fileName = 'myNewFilename.docx'\n\nreturn $input.item;"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1160,
        -1020
      ],
      "id": "79ff0e50-6c4c-4c8f-a1d3-9f608e72e6e4",
      "name": "Code1"
    },
    {
      "parameters": {
        "public": true,
        "initialMessages": "Need assistance? Just ask—I’m here to support you every step of the way!",
        "options": {
          "allowFileUploads": true,
          "loadPreviousSession": "memory",
          "subtitle": "Your digital logistics advisor is here. How can I help optimize your supply chain today?",
          "title": "Welcome to Nosta!",
          "customCss": ":root {\n  /* Brand Colors (Nosta) */\n  --chat--color-primary: #009EE3; /* Nosta Azure‑blue */\n  --chat--color-primary-shade-50: #007bb8;\n  --chat--color-primary-shade-100: #005d8f;\n  --chat--color-secondary: #582DC6; /* Nosta Violet accent */\n  --chat--color-secondary-shade-50: #461fa1;\n  --chat--color-secondary-shade-100: #36197a;\n  --chat--color-white: #FFFFFF;\n  --chat--color-light: #E4E4E4; /* light grey surfaces & borders */\n  --chat--color-light-shade-50: #d1d1d1;\n  --chat--color-light-shade-100: #bdbdbd;\n  --chat--color-medium: #B5BCC9;\n  --chat--color-dark: #000000; /* solid black text */\n  --chat--color-disabled: #9FA6B2;\n  --chat--color-typing: #555555;\n  --chat--header-height: 4rem;\n\n  /* Layout & Fonts */\n  --chat--spacing: 1rem;\n  --chat--border-radius: 0.5rem;\n  --chat--font-family: 'Roboto', system-ui, sans-serif;\n  --chat--heading-font-family: 'Poppins', system-ui, sans-serif;\n\n  /* Window */\n  --chat--window--width: 420px;\n  --chat--window--height: 600px;\n  --chat--window--z-index: 9999;\n  --chat--window--border: 1px solid var(--chat--color-light-shade-100);\n  --chat--window--border-radius: var(--chat--border-radius);\n\n  /* Header */\n  --chat--header--padding: 0.75rem;                    /* 50% less height */\n  --chat--header--background: var(--chat--color-primary-shade-100); /* deeper blue */\n  --chat--header--color: var(--chat--color-white);\n  --chat--heading--font-size: 1.8em;\n  --chat--subtitle--font-size: 1rem;\n  --chat--subtitle--line-height: 1.5;\n\n  /* Messages */\n  --chat--message--font-size: 1rem;\n  --chat--message--padding: 0.8rem 1rem;\n  --chat--message--border-radius: var(--chat--border-radius);\n  --chat--message--margin-bottom: 0.35rem; /* less spacing */\n  --chat--message-line-height: 1.6;\n  --chat--message--bot--background: #97979738;\n  --chat--message--bot--color: var(--chat--color-dark);\n  --chat--message--user--background: var(--chat--color-primary);\n  --chat--message--user--color: var(--chat--color-white);\n  --chat--message--pre--background: #e8ecf1;\n\n  /* Input */\n  --chat--textarea--height: 52px;\n  --chat--input--background: var(--chat--color-white);\n  --chat--input--text-color: var(--chat--color-dark);\n  --chat--input--padding: 0.75rem 1rem;\n  --chat--input--border: 1px solid var(--chat--color-light-shade-50);\n  --chat--input--border-radius: var(--chat--border-radius);\n\n  /* Buttons */\n  --chat--button--background: var(--chat--color-secondary);\n  --chat--button--color: var(--chat--color-white);\n  --chat--button--hover--background: var(--chat--color-secondary-shade-50);\n  --chat--button--hover--color: var(--chat--color-white);\n  --chat--button--padding: 0.5rem 1.2rem;\n  --chat--button--border-radius: var(--chat--border-radius);\n\n  /* Footer */\n  --chat--body--background: var(--chat--color-light);\n  --chat--footer--background: var(--chat--color-white);\n  --chat--footer--color: var(--chat--color-dark);\n}\n\n/* Structure */\nbody {\n  margin: 0;\n  font-family: var(--chat--font-family);\n  background: var(--chat--body--background);\n}\n\n.chat-window {\n  width: var(--chat--window--width);\n  height: var(--chat--window--height);\n  margin: 2rem auto;\n  border: var(--chat--window--border);\n  border-radius: var(--chat--window--border-radius);\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n  box-shadow: 0 2px 12px rgba(0, 0, 0, 0.1);\n}\n\n.chat-layout .chat-header {\n    background-repeat: no-repeat;\n    background-size: contain;\n    background-position: right center;\n    background-image: url(https://www.nosta.com/wp-content/themes/kd-theme/resources/img/nosta.jpg);\n    display: flex;\n    flex-direction: row;\n    justify-content: space-evenly;\n    align-items: center;\n    gap: 1em;\n    height: var(--chat--header-height);\n    padding: var(--chat--header--padding);\n    background-color: var(--chat--header--background);\n    color: var(--chat--header--color);\n    border-top: var(--chat--header--border-top);\n    border-bottom: var(--chat--header--border-bottom);\n    border-left: var(--chat--header--border-left);\n    border-right: var(--chat--header--border-right);\n}\n\n.chat-logo {\n  height: 40px;\n  width: auto;\n}\n\n.chat-header-text h1 {\n  margin: 0;\n  font-family: var(--chat--heading-font-family);\n  font-weight: 600;\n  font-size: var(--chat--heading--font-size);\n  text-transform: uppercase;\n  letter-spacing: 0.05em;\n}\n\n.chat-header-text p {\n  margin: 0.25rem 0 0;\n  font-size: var(--chat--subtitle--font-size);\n  line-height: var(--chat--subtitle--line-height);\n}\n\n/* Chat body */\n.chat-body {\n  flex: 1;\n  padding: var(--chat--spacing);\n  background: var(--chat--body--background);\n  overflow-y: auto;\n}\n\n.chat-message {\n  padding: var(--chat--message--padding);\n  margin-bottom: var(--chat--message--margin-bottom);\n  border-radius: var(--chat--message--border-radius);\n  font-size: var(--chat--message--font-size);\n  line-height: var(--chat--message-line-height);\n  max-width: 80%;\n  box-shadow: 0px 5px 9px 3px rgb(0 0 0 / 12%);\n  width: fit-content;\n}\n\n.chat-message.bot {\n  background: var(--chat--message--bot--background);\n  color: var(--chat--message--bot--color);\n  border-left: 3px solid var(--chat--color-primary);\n}\n\n.chat-message.user {\n  background: var(--chat--message--user--background);\n  color: var(--chat--message--user--color);\n  border-left: 3px solid var(--chat--color-secondary);\n  margin-left: auto;\n}\n\n/* Footer */\n.chat-footer {\n  background: var(--chat--footer--background);\n  padding: 0.5rem 1rem;\n  border-top: 1px solid var(--chat--color-light-shade-100);\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n}\n\n.chat-footer textarea {\n  flex-grow: 1;\n  resize: none;\n  padding: var(--chat--input--padding);\n  height: var(--chat--textarea--height);\n  border: var(--chat--input--border);\n  border-radius: var(--chat--input--border-radius);\n  font-family: var(--chat--font-family);\n  font-size: 1rem;\n  color: var(--chat--input--text-color);\n  background: var(--chat--input--background);\n}\n\n.chat-send-button {\n  background: var(--chat--button--background);\n  color: var(--chat--button--color);\n  border: none;\n  padding: var(--chat--button--padding);\n  border-radius: var(--chat--button--border-radius);\n  font-size: 1.25rem;\n  cursor: pointer;\n  transition: background 0.2s;\n}\n\n.chat-send-button:hover {\n  background: var(--chat--button--hover--background);\n}\n\nimg {\n    width: -webkit-fill-available;\n}"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.1,
      "position": [
        260,
        440
      ],
      "id": "1d6c5a2a-e8a1-4300-8b49-10d918cfbbae",
      "name": "When chat message received",
      "webhookId": "cae69b6d-5ce7-47fa-bae6-611f4ba4af17"
    }
  ],
  "origin": "n8n",
  "pinData": {},
  "repo": {
    "owner": "AnushaPriya2",
    "name": "n8n-workflow-backups"
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": {
    "node:Microsoft OneDrive Trigger": {
      "LastLink": "https://graph.microsoft.com/v1.0/me/drive/root/delta?token=NDslMjM0OyUyMzE7MzszOTMzNDU0MC05OTdlLTRiNDYtOTQ3ZS02MGE1ODcwMTZiOGI7NjM4ODgyNjcwNzczMDAwMDAwOzE2NTY0MDA5ODc7JTIzOyUyMzslMjMwOyUyMw",
      "lastTimeChecked": "2025-07-16T12:51:16.813Z"
    },
    "node:Schedule Trigger": {
      "recurrenceRules": []
    }
  },
  "tags": [],
  "triggerCount": 2,
  "updatedAt": "2025-08-06T13:21:51.000Z",
  "versionId": "699f42c5-04cf-4cc9-bcdc-9fd210538456"
}