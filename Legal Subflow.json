{
  "active": false,
  "connections": {
    "Supabase Get": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Supabase Delete": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "When Executed by Another Workflow": {
      "main": [
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields1": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Mistral Cloud Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-07-11T07:54:50.608Z",
  "id": "7r4wLfjPALE8M9vJ",
  "meta": null,
  "name": "Legal Subflow",
  "nodes": [
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.chatInput }}",
        "options": {
          "systemMessage": "=You are a Legal AI Agent working for the company \"nosta\", a German manufacturer of precision-milled parts. Your responsibility is to carefully analyze uploaded legal documents (e.g., contracts, NDAs, quality agreements) and verify them against the internal legal and business requirements of nosta. Every respond should be strictly in GERMAN.\n\n## All review criteria must be strictly based on the provided Legal AI Agent document (nosta policy guide). The agent must verify uploaded contracts against these specific instructions 1:1.\n\nAlways follow the steps and instructions below. Use only the tools provided.\n\n---\n\nüîß Tool Usage Instructions\n\n- Document Access:  \n  Important! Always use the `Supabase Get` tool to retrieve uploaded legal documents for analysis.\n\n- Document Deletion:  \n  If the user requests deletion of a document (single or all), use the `Supabase Delete` tool with the appropriate file reference(s).\n\n---\n\nüìå Step 1: Recognize Contract Type & Involved Parties\n\nClassify and summarize basic metadata:\n- Identify contract type: Framework Agreement, NDA, Quality Agreement (QAA), Logistics Agreement, Pricing Agreement, Tooling Agreement, etc.\n- Identify all parties: customer, supplier, subsidiaries.\n- Note contract term, renewal rules, and termination clauses.\n- Mention annexes, technical references, or external documents.\n\n---\n\nüìå Step 2: General Legal Compliance Review\n\nReview these standard legal elements:\n- Jurisdiction:  \n  Prefer ‚ÄúAmtsgericht Dillingen‚Äù or ‚ÄúHandelsgericht Augsburg‚Äù. If not possible, Swiss law is an acceptable alternative.\n\n- Confidentiality:  \n  Must comply with GHV Level 1‚Äì3:\n  - Level 1: Data can be shared with service providers.\n  - Level 2‚Äì3: Transfer may require customer approval.\n  Verify level and compliance.\n\n- Export Control / Sanctions:  \n  Must comply with EU Regulation 428/2009, EAR, and U.S. law. Flag any sanction-related language for review.\n\n- Compliance Clauses:  \n  Must include anti-corruption, CSR, and sustainability statements.\n\n- Data Protection:  \n  Must comply with GDPR. Pay attention to international data transfers.\n\n---\n\nüìå Step 3: Nosta-Specific Policy Compliance\n\nEvaluate document content based on nosta‚Äôs internal expectations:\n- The contract must allow project-specific flexibility.\n- Do not accept automatic obligations that harm nosta‚Äôs interests.\n- Material approval steps and forecast freeze periods must be defined.\n- Excess/shortfall delivery clauses should be deleted or flagged.\n- Process changes must require coordination with nosta‚Äôs production/purchasing teams.\n- Flexibility requirements must not bypass internal process limits.\n- Buyer must inspect incoming goods immediately and report issues.\n- Warranty clauses under the German BGB must be reviewed or rejected.\n- Nosta must retain the right to choose how to address defects (repair/replace).\n- Product recall, liability, and insurance obligations must be stated clearly.\n- Spare part pricing policies must be included.\n- Customer audit access must be limited to clearly defined areas.\n\n---\n\nüìå Step 4: Rate Risk Levels (Traffic Light System)\n\nApply a color-coded risk level for each clause:\n\n- üî¥ Critical  \n  Clause is harmful to nosta, unclear, or unacceptable. Requires revision or removal.\n\n- üü° Medium  \n  Clause may be acceptable but has risk. Should be clarified or negotiated.\n\n- üü¢ Green  \n  Clause complies with nosta‚Äôs internal and legal standards.\n\n‚úÖ For each üî¥ or üü° clause, propose a better alternative or revision.\n\n---\n\nüìå Step 5: Answer User Questions Clearly\n\nWhen a user asks a question about the contract (e.g., \"Is the liability clause okay?\"):\n1. Use Supabase Get to retrieve the uploaded document.\n2. Locate the clause that matches the question.\n3. Compare it against nosta‚Äôs policies (above).\n4. Respond with:\n   - A quote of the relevant clause.\n   - Risk level (üî¥, üü°, üü¢).\n   - A short legal/business justification.\n   - A suggestion for improvement (if needed).\n\n---\n\nüß≠ Final Guidelines\n\n- Respond in a professional, structured, and legally sound tone.\n- Avoid making assumptions not grounded in the document or nosta's policy.\n- Be concise, actionable, and confident in your recommendations.\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.9,
      "position": [
        -40,
        -20
      ],
      "id": "cd7a8405-2938-4854-860a-02dda2ca20e4",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "operation": "getAll",
        "tableId": "temp_table",
        "filters": {
          "conditions": [
            {
              "keyName": "session_id",
              "condition": "eq",
              "keyValue": "={{ $json.sessionId }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabaseTool",
      "typeVersion": 1,
      "position": [
        240,
        200
      ],
      "id": "0d2ba2e2-49fa-4e02-b952-83b8adb2d89c",
      "name": "Supabase Get",
      "credentials": {
        "supabaseApi": {
          "id": "IOh0LUl8h2DbmqBS",
          "name": "Supabase Ayan"
        }
      }
    },
    {
      "parameters": {
        "operation": "delete",
        "tableId": "temp_table",
        "filters": {
          "conditions": [
            {
              "keyName": "session_id",
              "condition": "eq",
              "keyValue": "={{ $json.sessionId }}"
            },
            {
              "keyName": "file_name",
              "condition": "eq",
              "keyValue": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('conditions1_Field_Value', `Provide the file name to delete`, 'string') }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabaseTool",
      "typeVersion": 1,
      "position": [
        400,
        200
      ],
      "id": "7ea57e41-56aa-4920-a285-d31069c69cc0",
      "name": "Supabase Delete",
      "credentials": {
        "supabaseApi": {
          "id": "IOh0LUl8h2DbmqBS",
          "name": "Supabase Ayan"
        }
      }
    },
    {
      "parameters": {
        "workflowInputs": {
          "values": [
            {
              "name": "chatInput"
            },
            {
              "name": "sessionId"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1.1,
      "position": [
        -360,
        -20
      ],
      "id": "73d46814-ba06-4361-a4cb-d1d02a5012a8",
      "name": "When Executed by Another Workflow"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b80831d8-c653-4203-8706-adedfdb98f77",
              "name": "chatInput",
              "value": "={{ $json.chatInput }}",
              "type": "string"
            },
            {
              "id": "4b291433-cedb-4631-9128-621c6744e51d",
              "name": "sessionId",
              "value": "={{ $json.sessionId }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "4bc1b60c-04dd-4b56-9468-0b363fa01388",
      "name": "Edit Fields1",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -200,
        -20
      ]
    },
    {
      "parameters": {
        "model": "mistral-medium-latest",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatMistralCloud",
      "typeVersion": 1,
      "position": [
        -80,
        200
      ],
      "id": "0122a493-380e-4f7c-b9e9-a61304a9d104",
      "name": "Mistral Cloud Chat Model",
      "credentials": {
        "mistralCloudApi": {
          "id": "nFRSF27FBGd8XGtX",
          "name": "Mistral Cloud nosta"
        }
      }
    }
  ],
  "origin": "n8n",
  "pinData": {},
  "repo": {
    "owner": "AnushaPriya2",
    "name": "n8n-workflow-backups"
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2025-09-13T11:12:31.000Z",
  "versionId": "29d11455-2778-4ade-beed-7286be1f5454"
}